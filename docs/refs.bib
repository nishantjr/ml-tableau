% Encoding: UTF-8

@Book{ABB+16,
  title     = {Deductive software verification---the {KeY} book},
  publisher = {Springer},
  year      = {2016},
  author    = {Ahrendt, Wolfgang and Beckert, Bernhard and Bubel, Richard and Hahnle, Reiner and H. Schmitt, Peter and Ulbrich, Mattias},
}

@InCollection{ACHH93,
  author    = {Alur, Rajeev and Courcoubetis, Costas and Henzinger, Thomas A. and Ho, Pei-Hsin},
  title     = {Hybrid automata: {A}n algorithmic approach to the specification and verification of hybrid systems},
  booktitle = {Hybrid systems},
  publisher = {Springer},
  year      = {1993},
  pages     = {209--229},
}

@InProceedings{BCD+06,
  author    = {Barnett, Mike and Chang, Bor-Yuh Evan and DeLine, Robert and Jacobs, Bart and Leino, K. Rustan M.},
  title     = {{B}oogie: {A} modular reusable verifier for object-oriented programs},
  booktitle = {Revised Lectures of the 4\textsuperscript{th} International Symposium on Formal Methods for Components and Objects (FMCO'05)},
  year      = {2006},
  pages     = {364--387},
  publisher = {Springer},
}

@InProceedings{berdine03decidable,
  author    = {Berdine, Josh and Calcagno, Cristiano and O{\textquoteright}Hearn, Peter W.},
  title     = {A decidable fragment of separation logic},
  booktitle = {Proceedings of the 24\textsuperscript{th} International Conference on Foundations of Software Technology and Theoretical Computer Science (FSTTCS'04)},
  year      = {2004},
  pages     = {97--109},
  publisher = {Springer},
  doi       = {10.1007/978-3-540-30538-5_9},
}

@InProceedings{berdine05symexec,
  author    = {Berdine, Josh and Calcagno, Cristiano and O{\textquoteright}Hearn, Peter W.},
  title     = {Symbolic execution with separation logic},
  booktitle = {Proceedings of the 3\textsuperscript{rd} Asian conference on Programming Languages and Systems (APLAS'05)},
  year      = {2005},
  pages     = {52--68},
  month     = nov,
  publisher = {Springer},
  doi       = {10.1007/11575467\_5},
}

@InProceedings{bjorner09fp,
  author    = {Bj{\o}rner, Nikolaj and Hendrix, Joe},
  title     = {Linear functional fixed-points},
  booktitle = {Proceedings of the 21\textsuperscript{st} International Conference on Computer Aided Verification (CAV'09)},
  year      = {2009},
  pages     = {124--139},
  publisher = {Springer},
  doi       = {10.1007/978-3-642-02658-4\_13},
}

@InProceedings{Bor00,
  author    = {Bornat, Richard},
  title     = {Proving pointer programs in {H}oare logic},
  booktitle = {Proceedings of the 5\textsuperscript{th} International Conference on Mathematics of Program Construction (MPC'00)},
  year      = {2000},
  pages     = {102--126},
  publisher = {Springer},
}

@InProceedings{bouajjani09ds,
  author    = {Ahmed Bouajjani and Cezara Dr{\u{a}}goi and Constantin Enea and Mihaela Sighireanu},
  title     = {A logic-based framework for reasoning about composite data structures},
  booktitle = {Proceedings of the 20\textsuperscript{th} International Conference on Concurrency Theory (CONCUR'09)},
  year      = {2009},
  pages     = {178--195},
  month     = sep,
  publisher = {Springer},
  doi       = {10.1007/978-3-642-04081-8\_13},
}

@InProceedings{BR15,
  author    = {Bogd\u{a}na\c{s}, Denis and Ro\c{s}u, Grigore},
  title     = {{K}-{J}ava: {A} complete semantics of {J}ava},
  booktitle = {Proceedings of the 42\textsuperscript{nd} Symposium on Principles of Programming Languages (POPL'15)},
  year      = {2015},
  pages     = {445--456},
  month     = jan,
  publisher = {ACM},
  doi       = {10.1145/2676726.2676982},
}

@InProceedings{Brotherston:2011,
  author    = {Brotherston, James and Distefano, Dino and Petersen, Rasmus Lerchedahl},
  title     = {Automated cyclic entailment proofs in separation logic},
  booktitle = {Proceedings of the 23\textsuperscript{rd} International Conference on Automated Deduction (CAV'11)},
  year      = {2011},
  pages     = {131--146},
  publisher = {Springer},
}

@InProceedings{Brotherston:2012,
  author    = {Brotherston, James and Gorogiannis, Nikos and Petersen, Rasmus L.},
  title     = {A generic cyclic theorem prover},
  booktitle = {Programming Languages and Systems},
  year      = {2012},
  editor    = {Jhala, Ranjit and Igarashi, Atsushi},
  pages     = {350--367},
  publisher = {Springer},
  abstract  = {We describe the design and implementation of an automated theorem prover realising a fully general notion of cyclic proof. Our tool, called {\$}{\backslash}textsc{\{}Cyclist{\}}{\$}, is able to construct proofs obeying a very general cycle scheme in which leaves may be linked to any other matching node in the proof, and to verify the general, global infinitary condition on such proof objects ensuring their soundness. {\$}{\backslash}textsc{\{}Cyclist{\}}{\$}is based on a new, generic theory of cyclic proofs that can be instantiated to a wide variety of logics. We have developed three such concrete instantiations, based on: (a) first-order logic with inductive definitions; (b) entailments of pure separation logic; and (c) Hoare-style termination proofs for pointer programs. Experiments run on these instantiations indicate that {\$}{\backslash}textsc{\{}Cyclist{\}}{\$}offers significant potential as a future platform for inductive theorem proving.},
}

@inproceedings{Brotherston:2014,
	author = {Brotherston, James and Fuhs, Carsten and P{\'e}rez, Juan A. Navarro and Gorogiannis, Nikos},
	title = {A Decision Procedure for Satisfiability in Separation Logic with Inductive Predicates},
	booktitle = {Proceedings of the Joint Meeting of the Twenty-Third EACSL Annual Conference on Computer Science Logic (CSL) and the Twenty-Ninth Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)},
	series = {CSL-LICS '14},
	year = {2014},
	isbn = {978-1-4503-2886-9},
	location = {Vienna, Austria},
	pages = {25:1--25:10},
	articleno = {25},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/2603088.2603091},
	doi = {10.1145/2603088.2603091},
	acmid = {2603091},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {decision procedure, inductive predicates, satisfiability, separation logic},
} 

@Book{BRV01,
  title     = {Modal logic},
  publisher = {Cambridge University Press},
  year      = {2001},
  author    = {Blackburn, Patrick and Rijke, Maarten de and Venema, Yde},
  address   = {New York, NY, USA},
  isbn      = {0-521-80200-8},
}

@Article{BT98,
  author    = {Blackburn, Patrick and Tzakova, Miroslava},
  title     = {Hybrid completeness},
  journal   = {Logic Journal of IGPL},
  year      = {1998},
  number    = {4},
  pages     = {625--650},
  publisher = {Oxford University Press},
}

@Book{BvBW06,
  title     = {Handbook of modal logic},
  publisher = {Elsevier},
  year      = {2006},
  author    = {Blackburn, Patrick and van Benthem, Johan and Wolter, Frank},
}

@InProceedings{cav17,
  author    = {Unno, Hiroshi and Torii, Sho and Sakamoto, Hiroki},
  title     = {Automating induction for solving {H}orn clauses},
  booktitle = {Proceedings of the 29\textsuperscript{th} International Conference on Computer Aided Verification (CAV'17)},
  year      = {2017},
  pages     = {571--591},
  month     = jul,
  publisher = {Springer},
  abstract  = {Verification problems of programs in various paradigms can be reduced to problems of solving Horn clause constraints on predicate variables that represent unknown inductive invariants. This paper presents a novel Horn constraint solving method based on inductive theorem proving: the method reduces Horn constraint solving to validity checking of first-order formulas with inductively defined predicates, which are then checked by induction on the derivation of the predicates. To automate inductive proofs, we introduce a novel proof system tailored to Horn constraint solving, and use a PDR-based Horn constraint solver as well as an SMT solver to discharge proof obligations arising in the proof search. We prove that our proof system satisfies the soundness and relative completeness with respect to ordinary Horn constraint solving schemes. The two main advantages of the proposed method are that (1) it can deal with constraints over any background theories supported by the underlying SMT solver, including nonlinear arithmetic and algebraic data structures, and (2) the method can verify relational specifications across programs in various paradigms where multiple function calls need to be analyzed simultaneously. The class of specifications includes practically important ones such as functional equivalence, associativity, commutativity, distributivity, monotonicity, idempotency, and non-interference. Our novel combination of Horn clause constraints with inductive theorem proving enables us to naturally and automatically axiomatize recursive functions that are possibly non-terminating, non-deterministic, higher-order, exception-raising, and over non-inductively defined data types. We have implemented a relational verification tool for the OCaml functional language based on the proposed method and obtained promising results in preliminary experiments.},
  doi       = {10.1007/978-3-319-63390-9\_30},
  isbn      = {978-3-319-63390-9},
}

@InProceedings{CDH+09,
  author    = {Cohen, Ernie and Dahlweid, Markus and Hillebrand, Mark and Leinenbach, Dirk and Moskal, Micha{\l} and Santen, Thomas and Schulte, Wolfram and Tobies, Stephan},
  title     = {{VCC}: {A} practical system for verifying concurrent {C}},
  booktitle = {Proceedings of the 22\textsuperscript{nd} International Conference on Theorem Proving in Higher Order Logics (TPHOLs'09)},
  year      = {2009},
  pages     = {23--42},
  month     = aug,
  publisher = {Springer},
  abstract  = {VCC is an industrial-strength verification environment for low-level concurrent system code written in C. VCC takes a program (annotated with function contracts, state assertions, and type invariants) and attempts to prove the correctness of these annotations. It includes tools for monitoring proof attempts and constructing partial counterexample executions for failed proofs. This paper motivates VCC, describes our verification methodology, describes the architecture of VCC, and reports on our experience using VCC to verify the Microsoft Hyper-V hypervisor.},
  doi       = {10.1007/978-3-642-03359-9},
  isbn      = {978-3-642-03359-9},
}

@Article{CDNQ12,
  author     = {Chin, Wei-Ngan and David, Cristina and Nguyen, Huu Hai and Qin, Shengchao},
  title      = {Automated verification of shape, size and bag properties via user-defined predicates in separation logic},
  journal    = {Science of Computer Programming},
  year       = {2012},
  number     = {9},
  pages      = {1006--1036},
  month      = aug,
  issn       = {0167-6423},
  acmid      = {2222283},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2010.07.004},
  issue_date = {August, 2012},
  numpages   = {31},
  publisher  = {Elsevier North-Holland, Inc.},
}

@article{Chin:2012,
	author = {Chin, Wei-Ngan and David, Cristina and Nguyen, Huu Hai and Qin, Shengchao},
	title = {Automated Verification of Shape, Size and Bag Properties via User-defined Predicates in Separation Logic},
	journal = {Sci. Comput. Program.},
	issue_date = {August, 2012},
	volume = {77},
	number = {9},
	month = aug,
	year = {2012},
	issn = {0167-6423},
	pages = {1006--1036},
	numpages = {31},
	url = {http://dx.doi.org/10.1016/j.scico.2010.07.004},
	doi = {10.1016/j.scico.2010.07.004},
	acmid = {2222283},
	publisher = {Elsevier North-Holland, Inc.},
	address = {Amsterdam, The Netherlands, The Netherlands},
	keywords = {Automated verification, Entailment checking, Inductive shape predicates with size and bag properties, Separation logic},
} 

@Article{Chu40,
  author    = {Church, Alonzo},
  title     = {A formulation of the simple theory of types},
  journal   = {The journal of symbolic logic},
  year      = {1940},
  number    = {2},
  pages     = {56--68},
  publisher = {Cambridge University Press},
}

@InProceedings{circ07,
  author    = {Lucanu, Dorel and Ro{\c{s}}u, Grigore},
  title     = {{CIRC}: {A} circular coinductive prover},
  booktitle = {Proceedings of the 2\textsuperscript{nd} international conference on Algebra and coalgebra in computer science (CALCO'07)},
  year      = {2007},
  pages     = {372--378},
}

@InProceedings{CJT15,
  author    = {Chu, Duc-Hiep and Jaffar, Joxan and Trinh, Minh-Thai},
  title     = {Automatic induction proofs of data-structures in imperative programs},
  booktitle = {Proceedings of the 36\textsuperscript{th} Annual ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'15)},
  year      = {2015},
  pages     = {457--466},
  publisher = {ACM},
  acmid     = {2737984},
  doi       = {10.1145/2737924.2737984},
  isbn      = {978-1-4503-3468-6},
  keywords  = {Data-structures, Induction Proofs, Separation},
  numpages  = {10},
}

@Manual{coq,
  title        = {The {C}oq proof assistant reference manual},
  author       = {\mbox{The Coq development team}},
  organization = {LogiCal Project},
  year         = {2004},
}

@InProceedings{CR05,
  author    = {Chen, Feng and Ro{\c{s}}u, Grigore},
  title     = {{Java}-{MOP}: {A} monitoring oriented programming environment for {Java}},
  booktitle = {Proceeding of the 11\textsuperscript{th} International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'05)},
  year      = {2005},
  pages     = {546--550},
  publisher = {Springer},
  abstract  = {A Java-based tool-supported software development and analysis framework is presented, where monitoring is a foundational principle. Expressive requirements specification formalisms can be included into the framework via logic plug-ins, allowing one to refer not only to the current state, but also to both past and future states.},
  doi       = {10.1007/978-3-540-31980-1_36},
}

@InProceedings{CR18,
  author    = {Chen, Xiaohong and Ro{\c{s}}u, Grigore},
  title     = {A language-independent program verification framework},
  booktitle = {Proceedings of the 8\textsuperscript{th} International Symposium on Leveraging Applications of Formal Methods (ISoLA'18)},
  year      = {2018},
  pages     = {92--102},
  month     = oct,
  publisher = {Springer},
  abstract  = {This invited paper describes an approach to language-independent deductive verification using the {\$}{\$}{\backslash}mathbb {\{}K{\}}{\$}{\$}semantics framework, in which an operational semantics of a language is defined and a program verifier together with other language tools are generated automatically, correct-by-construction.},
  doi       = {10.1007/978-3-030-03421-4},
  isbn      = {978-3-030-03421-4},
}

@InProceedings{CR19,
  author            = {Xiaohong Chen and Grigore Ro\c{s}u},
  title             = {Matching $\mu$-logic},
  booktitle         = {Proceedings of the 34\textsuperscript{th} Annual ACM/IEEE Symposium on Logic in Computer Science (LICS'19)},
  year              = {2019},
  pages             = {1--13},
  address           = {Vancouver, Canada},
  publisher         = {ACM},
  abstract          = {Matching logic is a logic for specifying and reasoning about
structure by means of patterns and pattern matching.
This paper makes two contributions.
First, it proposes a sound and complete proof system for
matching logic in its full generality.
Previously, sound and complete deduction for matching logic
was known only for particular theories providing equality
and membership.
Second, it proposes matching mu-logic, an extension of
matching logic with a least fixpoint mu-binder.
It is shown that matching mu-logic captures as special instances many
important logics in mathematics and computer science, including
first-order logic with least fixpoints, modal mu-logic
as well as dynamic logic and various temporal logics such as
infinite/finite-trace linear temporal logic and computation tree logic,
and notably reachability logic, the underlying logic of the K framework
for programming language semantics and formal analysis.
Matching mu-logic therefore serves as a unifying foundation for
specifying and reasoning about fixpoints and induction, 
programming languages and program specification and verification.},
  author_id         = {Xiaohong Chen and Grigore Ro\c{s}u},
  booktitle_acronym = {LICS'19},
  booktitle_url     = {http://lics.siglog.org/lics19},
  category          = {fsl,matching_logic,program_verification},
  project_name      = {Matching Logic},
  project_url       = {https://github.com/runtimeverification},
}

@TechReport{CR19a,
  author      = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  title       = {Matching $\mu$-logic},
  institution = {University of Illinois at Urbana-Champaign},
  year        = {2019},
  number      = {http://hdl.handle.net/2142/102281},
  month       = jan,
}

@TechReport{CR19b,
  author      = {Chen, Xiaohong and Ro\c{s}u, Grigore},
  title       = {Applicative Matching Logic},
  institution = {University of Illinois at Urbana-Champaign},
  year        = {2019},
  number      = {http://hdl.handle.net/2142/104616},
}

@Book{Cur58,
  title     = {Combinatory logic},
  publisher = {Amsterdam: North-Holland Pub. Co.},
  year      = {1958},
  author    = {Curry, Haskell B.},
}

@InProceedings{cvc4,
  author    = {Barrett, Clark and Conway, Christopher L. and Deters, Morgan and Hadarean, Liana and Jovanovi\'{c}, Dejan and King, Tim and Reynolds, Andrew and Tinelli, Cesare},
  title     = {{CVC4}},
  booktitle = {Proceedings of the 23\textsuperscript{rd} International Conference on Computer Aided Verification (CAV'11)},
  year      = {2011},
  pages     = {171--177},
  publisher = {Springer},
}

@InProceedings{DGH+16,
  author    = {Daian, Philip and Guth, Dwight and Hathhorn, Chris and Li, Yilong and Pek, Edgar and Saxena, Manasvi and \c{S}erb\u{a}nu\c{t}\u{a}, Traian Florin and Ro\c{s}u, Grigore},
  title     = {Runtime verification at work: {A} tutorial},
  booktitle = {Proceedings of the 16\textsuperscript{th} International Conference on Runtime Verification ({RV}'16)},
  year      = {2016},
  pages     = {46--67},
  month     = sep,
  publisher = {Springer},
  doi       = {http://dx.doi.org/10.1007/978-3-319-46982-9_5},
}

@InProceedings{DMB08,
  author    = {De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  title     = {{Z3}: {A}n efficient {SMT} solver},
  booktitle = {Proceedings of the 14\textsuperscript{th} International conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'08)},
  year      = {2008},
  pages     = {337--340},
  month     = apr,
  publisher = {Springer},
  doi       = {10.1007/978-3-540-78800-3\_24},
}

@Article{E97,
  author  = {{\'{E}}sik, Zolt{\'{a}}n},
  title   = {Completeness of {P}ark induction},
  journal = {Theoretical Computer Science},
  year    = {1997},
  number  = {1},
  pages   = {217--283},
  doi     = {10.1016/S0304-3975(96)00240-X},
}

@InCollection{Eme90,
  author    = {Emerson, E. Allen},
  title     = {Temporal and modal logic},
  booktitle = {Formal Models and Semantics},
  publisher = {Elsevier},
  year      = {1990},
  pages     = {995--1072},
}

@Article{Enea2017,
  author   = {Enea, Constantin and Leng{\'a}l, Ond{\v{r}}ej and Sighireanu, Mihaela and Vojnar, Tom{\'a}{\v{s}}},
  title    = {Compositional entailment checking for a fragment of separation logic},
  journal  = {Formal Methods in System Design},
  year     = {2017},
  volume   = {51},
  number   = {3},
  pages    = {575--607},
  month    = dec,
  issn     = {1572-8102},
  abstract = {We present a decision procedure for checking entailment between separation logic formulas with inductive predicates specifying complex data structures corresponding to finite nesting of various kinds of singly linked lists: acyclic or cyclic, nested lists, skip lists, etc. The decision procedure is compositional in the sense that it reduces the problem of checking entailment between two arbitrary formulas to the problem of checking entailment between a formula and an atom. Subsequently, in case the atom is a predicate, we reduce the entailment to testing membership of a tree derived from the formula in the language of a tree automaton derived from the predicate. The procedure is later also extended to doubly linked lists. We implemented this decision procedure and tested it successfully on verification conditions obtained from programs using both singly and doubly linked nested lists as well as skip lists.},
  day      = {01},
  doi      = {10.1007/s10703-017-0289-4},
  url      = {https://doi.org/10.1007/s10703-017-0289-4},
}

@InCollection{FHR13,
  author    = {Falcone, Yli{\`e}s and Havelund, Klaus and Reger, Giles},
  title     = {A tutorial on runtime verification},
  booktitle = {Engineering Dependable Software Systems},
  publisher = {{IOS} Press},
  year      = {2013},
  editor    = {Manfred Broy and Doron Peled and Georg Kalus},
  pages     = {141--175},
  note      = {Summer School Marktoberdorf 2012},
  doi       = {10.3233/978-1-61499-207-3-141},
}

@Book{FJ06,
  title     = {Algebra, meaning, and computation},
  publisher = {Springer},
  year      = {2006},
  editor    = {Futatsugi, Kokichi and Jouannaud, Jean-Pierre and Meseguer, Jos{\'{e}}},
  edition   = {First},
  doi       = {10.1007/11780274},
}

@Article{FL79,
  author    = {Fischer, Michael J. and Ladner, Richard E.},
  title     = {Propositional dynamic logic of regular programs},
  journal   = {Journal of Computer and System Sciences},
  year      = {1979},
  number    = {2},
  pages     = {194--211},
  month     = oct,
  doi       = {10.1016/0022-0000(79)90046-1},
  publisher = {Academic Press},
}

@InProceedings{FM07,
  author    = {Jean{-}Christophe Filli{\^{a}}tre and Claude March{\'{e}}},
  title     = {The {W}hy/{K}rakatoa/{C}aduceus platform for deductive program verification},
  booktitle = {Proceedings of the 19\textsuperscript{th} International Conference on Computer Aided Verification (CAV'07)},
  year      = {2007},
  pages     = {173--177},
  publisher = {Springer},
}

@Article{GB92,
  author     = {Goguen, Joseph A. and Burstall, Rod M.},
  title      = {Institutions: {A}bstract model theory for specification and programming},
  journal    = {Journal of the ACM},
  year       = {1992},
  number     = {1},
  pages      = {95--146},
  month      = jan,
  issn       = {0004-5411},
  abstract   = {There is a population explosion among the logical systems used in computing science. Examples include first-order logic, equational logic, Horn-clause logic, higher-order logic, infinitary logic, dynamic logic, intuitionistic logic, order-sorted logic, and temporal logic; moreover, there is a tendency for each theorem prover to have its own idiosyncratic logical system. The concept of institution is introduced to formalize the informal notion of {\textquotedblleft}logical system.{\textquotedblright} The major requirement is that there is a satisfaction relation between models and sentences that is consistent under change of notation. Institutions enable abstracting away from syntactic and semantic detail when working on language structure {\textquotedblleft}in-the-large{\textquotedblright}; for example, we can define language features for building large logical system. This applies to both specification languages and programming languages. Institutions also have applications to such areas as database theory and the semantics of artificial and natural languages. A first main result of this paper says that any institution such that signatures (which define notation) can be glued together, also allows gluing together theories (which are just collections of sentences over a fixed signature). A second main result considers when theory structuring is preserved by institution morphisms. A third main result gives conditions under which it is sound to use a theorem prover for one institution on theories from another. A fourth main result shows how to extend institutions so that their theories may include, in addition to the original sentences, various kinds of constraint that are useful for defining abstract data types, including both {\textquotedblleft}data{\textquotedblright} and {\textquotedblleft}hierarchy{\textquotedblright} constraints. Further results show how to define institutions that allow sentences and constraints from two or more institutions. All our general results apply to such {\textquotedblleft}duplex{\textquotedblright} and {\textquotedblleft}multiplex{\textquotedblright} institutions.},
  acmid      = {147524},
  address    = {New York, NY, USA},
  doi        = {10.1145/147508.147524},
  file       = {:Institutions, abstract model theory for specification and programming:},
  issue_date = {Jan. 1992},
  numpages   = {52},
  publisher  = {ACM},
}

@InProceedings{GHSR16,
  author    = {Guth, Dwight and Hathhorn, Chris and Saxena, Manasvi and Ro\c{s}u, Grigore},
  title     = {{RV-Match}: {P}ractical semantics-based program analysis},
  booktitle = {Proceedings of the 28\textsuperscript{th} International Conference on Computer Aided Verification ({CAV}'16)},
  year      = {2016},
  pages     = {447--453},
  month     = jul,
  publisher = {Springer},
  doi       = {http://dx.doi.org/10.1007/978-3-319-41528-4_24},
}

@Misc{GitHubCAV19,
  title        = {Automatic reasoning in matching $\mu$-logic},
  howpublished = {\url{https://github.com/cav-submission-12/cav-submission-12}},
  year         = {2019},
  commit       = {df4c3c56b8c3b29e3b82592ff28a6375362d1e82},
  journal      = {GitHub repository},
  publisher    = {GitHub},
}

@Misc{GitHubK5,
  title        = {{K} framework tools 5.0},
  howpublished = {\url{https://github.com/kframework/k}},
  year         = {2019},
  journal      = {GitHub repository},
  publisher    = {GitHub},
}

@InBook{GKWZ03,
  chapter   = {2},
  pages     = {41--109},
  title     = {Applied modal logic},
  publisher = {Elsevier},
  year      = {2003},
  author    = {D. M. Gabbay and A. Kurucz and F. Wolter and M. Zakharyaschev},
  booktitle = {Many-Dimensional Modal Logics},
  doi       = {10.1016/S0049-237X(03)80003-4},
  issn      = {0049-237X},
}

@Book{Goe92,
  title     = {On formally undecidable propositions of principia Mathematica and related systems},
  publisher = {Courier corporation},
  year      = {1992},
  author    = {G{\"o}del, Kurt},
}

@InCollection{Gog90,
  author    = {Goguen, Joseph A.},
  title     = {Higher-order functions considered unnecessary for higher-order programming},
  booktitle = {Research topics in functional programming},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  year      = {1990},
  editor    = {Turner, David A.},
  pages     = {309--351},
  address   = {Boston, MA, USA},
  isbn      = {0-201-17236-4},
  acmid     = {119842},
  numpages  = {43},
}

@InCollection{Gog91,
  author    = {Goguen, Joseph A.},
  title     = {Types as theories},
  booktitle = {Topology and Category Theory in Computer Science},
  publisher = {Oxford University Press, Inc.},
  year      = {1991},
  editor    = {Reed, G. M. and Roscoe, A. W. and Wachter, R. F.},
  chapter   = {Types As Theories},
  pages     = {357--385},
  address   = {New York, NY, USA},
  isbn      = {0-19-853760-3},
  acmid     = {135134},
  numpages  = {29},
}

@InProceedings{GS85,
  author    = {Yuri Gurevich and Saharon Shelah},
  title     = {Fixed-point extensions of first-order logic},
  booktitle = {Proceedings of the 26\textsuperscript{th} Annual Symposium on Foundations of Computer Science (SFCS'85)},
  year      = {1985},
  pages     = {346--353},
  publisher = {IEEE},
}

@Article{GS86,
  author    = {Gurevich, Yuri and Shelah, Saharon},
  title     = {Fixed-point extensions of first-order logic},
  journal   = {Annals of Pure and Applied Logic},
  year      = {1986},
  pages     = {265--280},
  month     = may,
  doi       = {10.1016/0168-0072(86)90055-2},
  publisher = {Elsevier},
}

@Article{GTWW77,
  author    = {Goguen, Joseph A. and Thatcher, James W. and Wagner, Eric G. and Wright, Jesse B.},
  title     = {Initial algebra semantics and continuous algebras},
  journal   = {Journal of the {ACM}},
  year      = {1977},
  number    = {1},
  pages     = {68--95},
  publisher = {ACM},
}

@Book{Ham88,
  title     = {Logic for mathematicians},
  publisher = {Cambridge University Press},
  year      = {1988},
  author    = {Hamilton, Alan G.},
}

@InCollection{Har84,
  author    = {Harel, David},
  title     = {Dynamic logic},
  booktitle = {Handbook of Philosophical Logic},
  publisher = {Springer},
  year      = {1984},
  editor    = {Gabbay, D. and Guenthner, F.},
  chapter   = {Dynamic Logic},
  pages     = {497--604},
  address   = {Dordrecht},
  isbn      = {978-94-009-6259-0},
  doi       = {10.1007/978-94-009-6259-0},
}

@InProceedings{HER15,
  author    = {Hathhorn, Chris and Ellison, Chucky and Ro\c{s}u, Grigore},
  title     = {Defining the undefinedness of {C}},
  booktitle = {Proceedings of the 36\textsuperscript{th} annual ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'15)},
  year      = {2015},
  pages     = {336--345},
  month     = jun,
  publisher = {ACM},
  doi       = {http://dx.doi.org/10.1145/2813885.2737979},
}

@Article{Hoa69,
  author  = {Hoare, C. A. R.},
  title   = {An axiomatic basis for computer programming},
  journal = {Communications of the {ACM}},
  year    = {1969},
  number  = {10},
  pages   = {576--580},
  month   = oct,
  doi     = {10.1145/363235.363259},
}

@Article{Hol97,
  author     = {Holzmann, Gerard J.},
  title      = {The model checker {SPIN}},
  journal    = {{IEEE} Trans. Softw. Eng.},
  year       = {1997},
  number     = {5},
  pages      = {279--295},
  issn       = {0098-5589},
  acmid      = {260902},
  address    = {Piscataway, NJ, USA},
  doi        = {10.1109/32.588521},
  issue_date = {May 1997},
  numpages   = {17},
  publisher  = {IEEE Press},
}

@InProceedings{HSZ+18,
  author    = {Everett Hildenbrandt and Manasvi Saxena and Xiaoran Zhu and Nishant Rodrigues and Philip Daian and Dwight Guth and Brandon Moore and Yi Zhang and Daejun Park and Andrei \c{S}tef\u{a}nescu and Grigore Ro\c{s}u},
  title     = {{KEVM}: {A} complete semantics of the {E}thereum virtual machine},
  booktitle = {Proceedings of the 2018 IEEE Computer Security Foundations Symposium (CSF'18)},
  year      = {2018},
  publisher = {IEEE},
  note      = {\url{http://jellopaper.org}},
}

@Article{II65,
  author    = {Imai, Yasuyuki and Is{\'e}ki, Kiyoshi},
  title     = {On axiom systems of propositional calculi},
  journal   = {Proceedings of the Japan Academy},
  year      = {1965},
  number    = {6},
  pages     = {436--439},
  publisher = {The Japan Academy},
}

@InProceedings{iosif13treewidth,
  author    = {Radu Iosif and Adam Rogalewicz and Jiri Simacek},
  title     = {The tree width of separation logic with recursive definitions},
  booktitle = {Proceedings of the 24\textsuperscript{th} International Conference on Automated Deduction (CADE'13)},
  year      = {2013},
  pages     = {21--38},
  month     = jun,
  publisher = {Springer},
  doi       = {10.1007/978-3-642-38574-2\_2},
}

@Misc{isabelle,
  author = {{The Isabelle development team}},
  title  = {{I}sabelle},
  year   = {2018},
  note   = {\url{https://isabelle.in.tum.de/}},
}

@Article{JM09,
  author    = {Jhala, Ranjit and Majumdar, Rupak},
  title     = {Software model checking},
  journal   = {{ACM} Comput. Surv.},
  year      = {2009},
  number    = {4},
  pages     = {1--54},
  month     = oct,
  articleno = {21},
  doi       = {10.1145/1592434.1592438},
  keywords  = {Software model checking, abstraction, counterexample-guided refinement, enumerative and symbolic model checking, liveness, safety},
  publisher = {ACM},
}

@InProceedings{JSP10,
  author    = {Jacobs, Bart and Smans, Jan and Piessens, Frank},
  title     = {A quick tour of the {V}eri{F}ast program verifier},
  booktitle = {Proceedings of the 8\textsuperscript{th} Asian Symposium of Programming Languages and Systems (APLAS'10)},
  year      = {2010},
  pages     = {304--311},
  month     = nov,
  publisher = {Springer},
  abstract  = {This paper describes the main features of VeriFast, a sound and modular program verifier for C and Java. VeriFast takes as input a number of source files annotated with method contracts written in separation logic, inductive data type and fixpoint definitions, lemma functions and proof steps. The verifier checks that (1) the program does not perform illegal operations such as dividing by zero or illegal memory accesses and (2) that the assumptions described in method contracts hold in each execution.},
  doi       = {10.1007/978-3-642-17164-2},
  isbn      = {978-3-642-17164-2},
}

@Misc{KEV17,
  author       = {{KEVM Team}},
  title        = {{KEVM}: semantics of {EVM} in {K}},
  howpublished = {\url{https://github.com/kframework/evm-semantics}},
  year         = {2017},
}

@Article{KO08,
  author  = {Kashima, Ryo and Okamoto, Keishi},
  title   = {General models and completeness of first-order modal $\mu$-calculus},
  journal = {Journal of Logic and Computation},
  year    = {2008},
  number  = {4},
  pages   = {497--507},
  doi     = {10.1093/logcom/exm077},
  eprint  = {/oup/backfile/content_public/journal/logcom/18/4/10.1093_logcom_exm077/3/exm077.pdf},
  file    = {:General models and completeness of first-order modal mu-calculus.pdf:PDF},
}

@InProceedings{Koz82,
  author    = {Kozen, Dexter},
  title     = {Results on the propositional $\mu$-calculus},
  booktitle = {Proceedings of the 9\textsuperscript{th} Colloquium on Automata, Languages and Programming},
  year      = {1982},
  pages     = {348--359},
  month     = oct,
  publisher = {Springer},
  abstract  = {We define a propositional version of the $\Mu$-calculus, and give an exponential-time decision procedure, small model property, and complete deductive system. We also show that it is strictly more expressive than PDL. Finally, we give an algebraic semantics and prove a representation theorem.},
  doi       = {10.1007/BFb0012782},
  isbn      = {978-3-540-39308-5},
}

@PhdThesis{Kre02,
  author = {Kreutzer, Stephan},
  title  = {Pure and applied fixed-point logics},
  school = {Bibliothek der RWTH Aachen},
  year   = {2002},
}

@InProceedings{lahiri08future,
  author    = {Shuvendu Lahiri and Shaz Qadeer},
  title     = {Back to the future: {R}evisiting precise program verification using {SMT} solvers},
  booktitle = {Proceedings of the 35\textsuperscript{th} annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL'08)},
  year      = {2008},
  pages     = {171--182},
  month     = jan,
  publisher = {ACM},
  doi       = {10.1145/1328438.1328461},
}

@Article{Lam80,
  author  = {Lamport, Leslie},
  title   = {The ``{H}oare logic'' of concurrent programs},
  journal = {Acta Informatica},
  year    = {1980},
  number  = {1},
  pages   = {21--37},
  doi     = {10.1007/BF00289062},
}

@InProceedings{Lee08,
  author       = {Lee, Edward A.},
  title        = {Cyber physical systems: {D}esign challenges},
  booktitle    = {11\textsuperscript{th} IEEE Symposium on Object Oriented Real-Time Distributed Computing (ISORC)},
  year         = {2008},
  pages        = {363--369},
  organization = {IEEE},
}

@Article{Len05,
  author  = {Lenzi, Giacomo},
  title   = {The modal $\mu$-calculus: {A} survey},
  journal = {Task quarterly},
  year    = {2005},
  number  = {3},
  pages   = {293--316},
  file    = {:The modal mu-calculus, A survey.pdf:PDF},
}

@InProceedings{LM14,
  author    = {Leino, K. Rustan M. and Moskal, Micha{\l}},
  title     = {Co-induction simply},
  booktitle = {Proceedings of the 19\textsuperscript{th} International Symposium on Formal Methods (FM'14)},
  year      = {2014},
  number    = {8442},
  pages     = {382--398},
  month     = may,
  publisher = {Springer},
  abstract  = {This paper shows that an SMT-based program verifier can support reasoning about co-induction---handling infinite data structures, lazy function calls, and user-defined properties defined as greatest fix-points, as well as letting users write co-inductive proofs. Moreover, the support can be packaged to provide a simple user experience. The paper describes the features for co-induction in the language and verifier Dafny, defines their translation into input for a first-order SMT solver, and reports on some encouraging initial experience.},
  doi       = {10.1007/978-3-319-06410-9},
  isbn      = {978-3-319-06410-9},
}

@Misc{LMS18,
  author        = {Leustean, Ioana and Moanga, Natalia and \c{S}erb\u{a}nu\c{t}\u{a}, Traian Florin},
  title         = {A many-sorted polyadic modal logic},
  howpublished  = {\url{https://arxiv.org/abs/1803.09709}},
  year          = {2018},
  archiveprefix = {arXiv},
  eprint        = {1803.09709},
  primaryclass  = {cs.LO},
}

@Article{Loding:2017,
  author    = {L{\"{o}}ding, Christof and Parthasarathy, Madhusudan and Pe{\~{n}}a, Lucas},
  title     = {Foundations for natural proofs and quantifier instantiation},
  journal   = {Proceedings of the ACM on Programming Languages (POPL'17)},
  year      = {2017},
  pages     = {1--30},
  doi       = {10.1145/3158098},
  publisher = {ACM},
}

@Article{Loe15,
  author    = {L{\"o}wenheim, Leopold},
  title     = {{\"U}ber m{\"o}glichkeiten im relativkalk{\"u}l},
  journal   = {Mathematische Annalen},
  year      = {1915},
  number    = {4},
  pages     = {447--470},
  publisher = {Springer},
}

@InProceedings{LZL+14,
  author    = {Luo, Qingzhou and Zhang, Yi and Lee, Choonghwan and Jin, Dongyun and Meredith, Patrick O'Neil and \c{S}erb\u{a}nu\c{t}\u{a}, Traian Florin and Ro\c{s}u, Grigore},
  title     = {{RV-Monitor}: {E}fficient parametric runtime verification with simultaneous properties},
  booktitle = {Proceedings of the 5\textsuperscript{th} International Conference on Runtime Verification (RV'14)},
  year      = {2014},
  pages     = {285--300},
  month     = sep,
  publisher = {Lecture Notes in Computer Science},
}

@InProceedings{magill08shape,
  author    = {Stephen Magill and Ming-Hsien Tsai and Peter Lee and Yih-Kuen Tsay},
  title     = {{THOR}: {A} tool for reasoning about shape and arithmetic},
  booktitle = {Proceedings of the 20\textsuperscript{th} International Conference on Computer Aided Verification (CAV'08)},
  year      = {2008},
  pages     = {428--432},
  month     = jul,
  publisher = {Springer},
  doi       = {10.1007/978-3-540-70545-1\_41},
}

@Article{Mal36,
  author  = {Malc'ev, Anatoli Ivanovi},
  title   = {Axiomatizable classes of locally free algebras of various type},
  journal = {The Metamathematics of Algebraic Systems: Collected Papers},
  year    = {1936},
  pages   = {262--281},
}

@Book{Men79,
  title     = {Introduction to mathematical logic},
  publisher = {Springer},
  year      = {1979},
  author    = {Mendelson, Elliott},
  isbn      = {978-1-4615-7290-9},
}

@InProceedings{Mes10,
  author    = {Meseguer, Jos{\'e}},
  title     = {Twenty years of rewriting logic},
  booktitle = {Proceedings of the 8\textsuperscript{th} International Conference on Rewriting Logic and Its Applications (WRLA'10)},
  year      = {2010},
  pages     = {15--17},
  month     = oct,
  publisher = {Springer},
  acmid     = {1927809},
  doi       = {10.1016/j.jlap.2012.06.003},
  numpages  = {3},
}

@Misc{mlprover,
  author       = {Authors, Anonymous},
  title        = {Matching logic prover},
  howpublished = {Github Project},
  year         = {2019},
  note         = {Link removed for double blind review.},
}

@Manual{mona,
  title        = {{MONA} version 1.4 user manual},
  author       = {Nils Klarlund and Anders M{\o}ller},
  organization = {BRICS, Department of Computer Science, Aarhus University},
  month        = jan,
  year         = {2001},
  url          = {https://cs.au.dk/~amoeller/papers/mona14/},
}

@InProceedings{MQS12,
  author    = {Madhusudan, Parthasarathy and Qiu, Xiaokang and Stefanescu, Andrei},
  title     = {Recursive proofs for inductive tree data-structures},
  booktitle = {Proceedings of the 39\textsuperscript{th} Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL'12)},
  year      = {2012},
  pages     = {123--136},
  month     = jan,
  publisher = {ACM},
  acmid     = {2103673},
  doi       = {10.1145/2103656.2103673},
  isbn      = {978-1-4503-1083-3},
  keywords  = {heap analysis, recursive program, smt solvers, tree},
  numpages  = {14},
}

@InProceedings{navarro11pldi,
  author    = {P{\'{e}}rez, Juan Antonio Navarro and Rybalchenko, Andrey},
  title     = {Separation logic + superposition calculus = heap theorem prover},
  booktitle = {Proceedings of the 32\textsuperscript{nd} annual ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'11)},
  year      = {2011},
  pages     = {556--566},
  month     = jun,
  publisher = {ACM},
  doi       = {10.1145/1993498.1993563},
}

@InProceedings{NC08,
  author    = {Nguyen, Huu Hai and Chin, Wei-Ngan},
  title     = {Enhancing program verification with lemmas},
  booktitle = {Proceedings of the 20\textsuperscript{th} International Conference on Computer Aided Verification (CAV'08)},
  year      = {2008},
  pages     = {355--369},
  month     = jul,
  publisher = {Springer},
  acmid     = {1427827},
  doi       = {10.1007/978-3-540-70545-1},
  isbn      = {978-3-540-70543-7},
  numpages  = {15},
}

@InProceedings{NPR13,
  author    = {Navarro P{\'e}rez, Juan Antonio and Rybalchenko, Andrey},
  title     = {Separation logic modulo theories},
  booktitle = {Programming Languages and Systems},
  year      = {2013},
  editor    = {Shan, Chung-chieh},
  pages     = {90--106},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Logical reasoning about program behaviours often requires dealing with heap structures as well as scalar data types. Advances in Satisfiability Modulo Theories (SMT) offer efficient procedures for dealing with scalar values, yet they lack expressive support for dealing with heap structures. In this paper, we present an approach that integrates separation logic--a prominent logic for reasoning about linked data structures on the heap--and existing SMT solving technology. Our model-based approach communicates heap aliasing information between theory and separation logic reasoning, providing an efficient decision procedure for discharging verification conditions in program analysis and verification.},
  isbn      = {978-3-319-03542-0},
}

@Book{Pea89,
  title     = {Arithmetices principia: {N}ova methodo exposita},
  publisher = {Fratres Bocca},
  year      = {1889},
  author    = {Peano, Giuseppe},
}

@Article{Pit03,
  author   = {Andrew M. Pitts},
  title    = {Nominal logic, {A} first order theory of names and binding},
  journal  = {Information and Computation},
  year     = {2003},
  number   = {2},
  pages    = {165--193},
  issn     = {0890-5401},
  note     = {Theoretical Aspects of Computer Software (TACS 2001)},
  abstract = {This paper formalises within first-order logic some common practices in computer science to do with representing and reasoning about syntactical structures involving lexically scoped binding constructs. It introduces Nominal Logic, a version of first-order many-sorted logic with equality containing primitives for renaming via name-swapping, for freshness of names, and for name-binding. Its axioms express properties of these constructs satisfied by the FM-sets model of syntax involving binding, which was recently introduced by the author and M.J. Gabbay and makes use of the Fraenkel--Mostowski permutation model of set theory. Nominal Logic serves as a vehicle for making two general points. First, name-swapping has much nicer logical properties than more general, non-bijective forms of renaming while at the same time providing a sufficient foundation for a theory of structural induction/recursion for syntax modulo $\alpha$-equivalence. Secondly, it is useful for the practice of operational semantics to make explicit the equivariance property of assertions about syntax -- namely that their validity is invariant under name-swapping.},
  doi      = {https://doi.org/10.1016/S0890-5401(03)00138-X},
  file     = {:Nominal logic, A first order theory of names and binding.pdf:PDF},
  keywords = {Abstract syntax, Variable binding, Permutation, Fresh names},
}

@InProceedings{Pla12,
  author    = {A. Platzer},
  title     = {The complete proof theory of hybrid systems},
  booktitle = {Proceedings of the 27\textsuperscript{th} Annual IEEE Symposium on Logic in Computer Science},
  year      = {2012},
  pages     = {541--550},
  month     = jun,
  doi       = {10.1109/li.2012.64},
  file      = {:The complete proof theory of hybrid systems.pdf:PDF},
  issn      = {1043-6871},
  keywords  = {continuous systems;discrete systems;inference mechanisms;theorem proving;hybrid system axiomatization;continuous dynamical systems;discrete dynamical systems;complete proof-theoretical alignment;discrete reasoning;continuous reasoning;Approximation methods;Differential equations;Cognition;Polynomials;Computer science;Vectors;proof theory;hybrid dynamical systems;differential dynamic logic;axiomatization;completeness},
}

@InProceedings{Pnu77,
  author       = {Pnueli, Amir},
  title        = {The temporal logic of programs},
  booktitle    = {Foundations of Computer Science, 1977., 18\textsuperscript{th} Annual Symposium on},
  year         = {1977},
  pages        = {46--57},
  organization = {IEEE},
}

@InProceedings{PSR15,
  author    = {Park, Daejun and \c{S}tef\u{a}nescu, Andrei and Ro\c{s}u, Grigore},
  title     = {{KJS}: {A} complete formal semantics of {JavaScript}},
  booktitle = {Proceedings of the 36\textsuperscript{th} annual ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'15)},
  year      = {2015},
  pages     = {346--356},
  month     = jun,
  publisher = {ACM},
  doi       = {10.1145/2737924.2737991},
}

@InProceedings{QGSM13,
  author    = {Qiu, Xiaokang and Garg, Pranav and \c{S}tef\u{a}nescu, Andrei and Madhusudan, Parthasarathy},
  title     = {Natural proofs for structure, data, and separation},
  booktitle = {Proceedings of the 34\textsuperscript{th} annual ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI'13)},
  year      = {2013},
  pages     = {231--242},
  month     = jun,
  publisher = {ACM},
  acmid     = {2462169},
  doi       = {10.1145/2491956.2462169},
  isbn      = {978-1-4503-2014-6},
  keywords  = {data structures, heap analysis, natural proofs, separation logic, smt solvers},
  numpages  = {12},
}

@InProceedings{rakamaric07heaps,
  author    = {Zvonimir Rakamari{\'{c}} and Jesse Bingham and Alan J. Hu},
  title     = {An inference-rule-based decision procedure for verification of heap-manipulating programs with mutable data and cyclic data structures},
  booktitle = {Proceedings of the 8\textsuperscript{th} International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI'07)},
  year      = {2007},
  pages     = {106--121},
  month     = jan,
  publisher = {Springer},
  doi       = {10.1007/978-3-540-69738-1\_8},
}

@InProceedings{rakamaric07heapsSMT,
  author    = {Zvonimir Rakamari{\'{c}} and Roberto Bruttomesso and Alan J. Hu and Alessandro Cimatti},
  title     = {Verifying heap-manipulating programs in an {SMT} framework},
  booktitle = {Proceedings of the 5\textsuperscript{th} International Symposium on Automated Technology for Verification and Analysis (ATVA'07)},
  year      = {2007},
  pages     = {237--252},
  month     = oct,
  publisher = {Springer},
  doi       = {10.1007/978-3-540-75596-8\_18},
}

@InProceedings{ranise06list,
  author    = {Silvio Ranise and Calogero Zarba},
  title     = {A theory of singly-linked lists and its extensible decision procedure},
  booktitle = {Proceedings of the 4\textsuperscript{th} IEEE International Conference on Software Engineering and Formal Methods (SEFM'06)},
  year      = {2006},
  pages     = {206--215},
  month     = oct,
  publisher = {IEEE},
  doi       = {10.1109/sefm.2006.7},
}

@Article{Rey01,
  author    = {Reynolds, M.},
  title     = {An axiomatization of full computation tree logic},
  journal   = {Journal of Symbolic Logic},
  year      = {2001},
  number    = {3},
  pages     = {1011--1057},
  doi       = {10.2307/2695091},
  publisher = {Cambridge University Press},
}

@InProceedings{Rey02,
  author    = {Reynolds, John C.},
  title     = {Separation logic: {A} logic for shared mutable data structures},
  booktitle = {Proceedings of the 17\textsuperscript{th} Annual IEEE Symposium on Logic in Computer Science (LICS'02)},
  year      = {2002},
  pages     = {55--74},
  month     = jul,
  publisher = {IEEE},
  doi       = {10.1109/lics.2002.1029817},
}

@Article{Ros17,
  author  = {Ro\c{s}u, Grigore},
  title   = {Matching logic},
  journal = {Logical Methods in Computer Science},
  year    = {2017},
  volume  = {13},
  number  = {4},
  pages   = {1--61},
  month   = dec,
  doi     = {10.23638/lmcs-13(4:28)2017},
  file    = {:Matching logic.pdf:PDF},
}

@InProceedings{Ros17a,
  author    = {Ro\c{s}u, Grigore},
  title     = {{K}---{A} semantic framework for programming languages and formal analysis tools},
  booktitle = {Dependable Software Systems Engineering},
  year      = {2017},
  publisher = {{IOS} Press},
}

@Article{Ros18,
  author    = {Ro\c{s}u, Grigore},
  title     = {Finite-trace linear temporal logic: {C}oinductive completeness},
  journal   = {Formal methods in system design},
  year      = {2018},
  number    = {1},
  pages     = {138--163},
  file      = {:Finite-trace linear temporal logic, Coinductive completeness.pdf:PDF},
  publisher = {Springer},
}

@InProceedings{RP08,
  author    = {R{\'e}gis-Gianas, Yann and Pottier, Fran{\c{c}}ois},
  title     = {A {H}oare logic for call-by-value functional programs},
  booktitle = {Proceedings of the 9\textsuperscript{th} International Conference on Mathematics of Program Construction (MPC'08)},
  year      = {2008},
  pages     = {305--335},
  publisher = {Springer},
}

@InProceedings{reachability-logic,
  author    = {Ro\c{s}u, Grigore and \c{S}tef\u{a}nescu, Andrei and Ciob\^{a}c\u{a}, \c{S}tefan and Moore, Brandon M.},
  title     = {One-path reachability logic},
  booktitle = {Proceedings of the 28\textsuperscript{th} Symposium on Logic in Computer Science (LICS'13)},
  year      = {2013},
  pages     = {358--367},
  month     = jun,
  publisher = {IEEE},
  doi       = {10.1109/lics.2013.42},
}

@Book{Sch04,
  title     = {Verification of reactive systems: {F}ormal methods and algorithms},
  publisher = {Springer},
  year      = {2004},
  author    = {Klaus Schneider},
}

@Article{Sch24,
  author    = {Sch{\"o}nfinkel, Moses},
  title     = {{\"U}ber die {B}austeine der mathematischen {L}ogik},
  journal   = {Mathematische annalen},
  year      = {1924},
  number    = {3-4},
  pages     = {305--316},
  publisher = {Springer},
}

@InProceedings{SCM+14,
  author    = {\c{S}tef\u{a}nescu, Andrei and Ciob\^{a}c\u{a}, \c{S}tefan and Mereu\c{t}\u{a}, Radu and Moore, Brandon M. and \c{S}erb\u{a}nu\c{t}\u{a}, Traian Florin and Ro\c{s}u, Grigore},
  title     = {All-path reachability logic},
  booktitle = {Proceedings of the Joint 25\textsuperscript{th} International Conference on Rewriting Techniques and Applications and 12\textsuperscript{th} International Conference on Typed Lambda Calculi and Applications (RTA-TLCA'14)},
  year      = {2014},
  pages     = {425--440},
  month     = jul,
  publisher = {Springer},
  doi       = {http://dx.doi.org/10.1007/978-3-319-08918-8_29},
  file      = {:All-path reachability logic.pdf:PDF},
}

@InProceedings{SCR12,
  author    = {\c{S}erb\u{a}nu\c{t}\u{a}, Traian Florin and Chen, Feng and Ro\c{s}u, Grigore},
  title     = {Maximal causal models for sequentially consistent systems},
  booktitle = {Proceedings of the 3\textsuperscript{rd} International Conference on Runtime Verification (RV'12)},
  year      = {2012},
  pages     = {136--150},
  month     = sep,
  publisher = {Springer},
  doi       = {http://dx.doi.org/10.1007/978-3-642-35632-2_16},
}

@InProceedings{SNPR+19,
  author    = {Sighireanu, Mihaela and Navarro P{\'e}rez, Juan A. and Rybalchenko, Andrey and Gorogiannis, Nikos and Iosif, Radu and Reynolds, Andrew and Serban, Cristina and Katelaan, Jens and Matheja, Christoph and Noll, Thomas and Zuleger, Florian and Chin, Wei-Ngan and Le, Quang Loc and Ta, Quang-Trung and Le, Ton-Chanh and Nguyen, Thanh-Toan and Khoo, Siau-Cheng and Cyprian, Michal and Rogalewicz, Adam and Vojnar, Tomas and Enea, Constantin and Lengal, Ondrej and Gao, Chong and Wu, Zhilin},
  title     = {{SL-COMP}: {C}ompetition of solvers for separation logic},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  year      = {2019},
  editor    = {Beyer, Dirk and Huisman, Marieke and Kordon, Fabrice and Steffen, Bernhard},
  pages     = {116--132},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {SL-COMP aims at bringing together researchers interested on improving the state of the art of the automated deduction methods for Separation Logic (SL). The event took place twice until now and collected more than 1K problems for different fragments of SL. The input format of problems is based on the SMT-LIB format and therefore fully typed; only one new command is added to SMT-LIB's list, the command for the declaration of the heap's type. The SMT-LIB theory of SL comes with ten logics, some of them being combinations of SL with linear arithmetics. The competition's divisions are defined by the logic fragment, the kind of decision problem (satisfiability or entailment) and the presence of quantifiers. Until now, SL-COMP has been run on the StarExec platform, where the benchmark set and the binaries of participant solvers are freely available. The benchmark set is also available with the competition's documentation on a public repository in GitHub.},
  isbn      = {978-3-030-17502-3},
}

@Article{Tar55,
  author    = {Tarski, Alfred},
  title     = {A lattice-theoretical fixpoint theorem and its applications},
  journal   = {Pacific journal of Mathematics},
  year      = {1955},
  number    = {2},
  pages     = {285--309},
  doi       = {10.2140/pjm.1955.5.285},
  publisher = {Pacific Journal of Mathematics},
}

@Article{TLKC19,
  author   = {Ta, Quang-Trung and Le, Ton Chanh and Khoo, Siau-Cheng and Chin, Wei-Ngan},
  title    = {Automated mutual induction proof in separation logic},
  journal  = {Formal Aspects of Computing},
  year     = {2019},
  number   = {2},
  pages    = {207--230},
  month    = apr,
  issn     = {1433-299X},
  abstract = {We present a deductive proof system to automatically prove separation logic entailments by mathematical induction. Our technique is called the mutual induction proof. It is an instance of the well-founded induction, a.k.a., Noetherian induction. More specifically, we propose a novel induction principle based on a well-founded relation of separation logic models. We implement this principle explicitly as inference rules so that it can be easily integrated into a deductive proof system. Our induction principle allows a goal entailment and other entailments derived during the proof search to be used as hypotheses to mutually prove each other. This feature increases the success chance of proving the goal entailment. We have implemented this mutual induction proof technique in a prototype prover and evaluated it on two entailment benchmarks collected from the literature as well as a synthetic benchmark. The experimental results are promising since our prover can prove most of the valid entailments in these benchmarks, and achieves a better performance than other state-of-the-art separation logic provers.},
  doi      = {10.1007/s00165-018-0471-5},
}

@InProceedings{vOhe01,
  author    = {von Oheimb, David},
  title     = {{H}oare logic for {J}ava in {I}sabelle/{HOL}},
  booktitle = {Concurrency and Computation: Practice and Experience},
  year      = {2001},
  pages     = {1173--1214},
}

@Article{Wal00,
  author    = {Walukiewicz, Igor},
  title     = {Completeness of {K}ozen's axiomatisation of the propositional $\mu$-calculus},
  journal   = {Information and Computation},
  year      = {2000},
  number    = {1-2},
  pages     = {142--182},
  publisher = {Elsevier},
}

@InProceedings{wies13cav,
  author    = {Ruzica Piskac and Thomas Wies and Damien Zufferey},
  title     = {Automating separation logic using {SMT}},
  booktitle = {Proceedings of the 25\textsuperscript{th} International Conference on Computer Aided Verification (CAV'13)},
  year      = {2013},
  pages     = {773--789},
  month     = jul,
  publisher = {Springer},
  doi       = {10.1007/978-3-642-39799-8\_54},
}

@InCollection{ZWL13,
  author    = {Zhao, Liang and Wang, Shuling and Liu, Zhiming},
  title     = {Graph-based object-oriented {H}oare logic},
  booktitle = {Theories of Programming and Formal Methods: Essays Dedicated to Jifeng He on the Occasion of His 70\textsuperscript{th} Birthday},
  publisher = {Springer},
  year      = {2013},
  pages     = {374--393},
  doi       = {10.1007/978-3-642-39698-4_23},
}

@Article{ZX04,
  author     = {Zhang, Yingzhou and Xu, Baowen},
  title      = {A survey of semantic description frameworks for programming languages},
  journal    = {ACM SIGPLAN Notices},
  year       = {2004},
  number     = {3},
  pages      = {14--30},
  month      = mar,
  issn       = {0362-1340},
  acmid      = {981013},
  address    = {New York, NY, USA},
  doi        = {10.1145/981009.981013},
  file       = {:A survey of semantic description frameworks for programming languages.pdf:PDF},
  issue_date = {March 2004},
  keywords   = {axiomatic semantics, denotational semantics, formal semantics, hybrid semantics, operational semantics, semantic description frameworks},
  numpages   = {17},
  publisher  = {ACM},
}

@techreport{chen-rosu-2019-semantics-of-k,
    author = "Chen, Xiaohong and Ro\c{s}u, Grigore",
    month = "July",
    year = "2019",
    number = "http://hdl.handle.net/2142/104616",
    institution = "University of Illinois at Urbana-Champaign",
    title = "{A}pplicative Matching Logic: Semantics of {K}"
}

@techreport{applicative-matching-logic,
  title={Applicative matching logic},
  author={Chen, Xiaohong and Ro\c{s}u, Grigore},
  year={2019},
  number = "http://hdl.handle.net/2142/104616",
  institution = "University of Illinois at Urbana-Champaign",
}

@inproceedings{constrained-constructor-patterns,
  title={Connecting Constrained Constructor Patterns and Matching Logic},
  author={Chen, Xiaohong and Lucanu, Dorel and Ro{\c{s}}u, Grigore},
  booktitle={International Workshop on Rewriting Logic and its Applications},
  pages={19--37},
  year={2020},
  organization={Springer}
}

@inproceedings{matching-mu-logic,
  title={Matching $\mu$-Logic},
  author={Chen, Xiaohong and Ro{\c{s}}u, Grigore},
  booktitle={2019 34th Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)},
  pages={1--13},
  year={2019},
  organization={IEEE}
}

@article{matching-logic-2017,
  title={Matching logic},
  author={Ro\c{s}u, Grigore},
  journal={arXiv preprint arXiv:1705.06312},
  year={2017}
}

@article{twenty-years,
  title={Twenty years of rewriting logic},
  author={Meseguer, Jos{\'e}},
  journal={The Journal of Logic and Algebraic Programming},
  volume={81},
  number={7-8},
  pages={721--781},
  year={2012},
  publisher={Elsevier}
}

@inproceedings{a-new-rule-for-ltl,
  title={A new rule for {LTL} tableaux},
  author={Reynolds, Mark},
  booktitle={7th International Symposium on Games},
  pages={287--301},
  year={2016},
  organization={Open Publishing Association}
}

@article{towards-a-unified-proof-framework,
  title={Towards a unified proof framework for automated fixpoint reasoning using matching logic},
  author={Chen, Xiaohong and Trinh, Minh-Thai and Rodrigues, Nishant and Pe{\~n}a, Lucas and Ro{\c{s}}u, Grigore},
  journal={Proceedings of the ACM on Programming Languages},
  volume={4},
  number={OOPSLA},
  pages={1--29},
  year={2020},
  publisher={ACM New York, NY, USA}
}

@article{church1936unsolvable,
  title={An unsolvable problem of elementary number theory},
  author={Church, Alonzo},
  journal={American journal of mathematics},
  volume={58},
  number={2},
  pages={345--363},
  year={1936},
  publisher={JSTOR}
}

@article{turing1937computable,
  title={On computable numbers, with an application to the {E}ntscheidungsproblem},
  author={Turing, Alan Mathison},
  journal={Proceedings of the London mathematical society},
  volume={2},
  number={1},
  pages={230--265},
  year={1937},
  publisher={Wiley Online Library}
}

@article{ramsey1930problem,
  title={On a problem of formal logic},
  author={Ramsey, Frank P},
  journal={Proceedings of the London Mathematical Society},
  volume={2},
  number={1},
  pages={264--286},
  year={1930},
  publisher={Wiley Online Library}
}

@inproceedings{vardi1997modal,
  title={Why Is Modal Logic So Robustly Decidable?},
  author={ Moshe Y. Vardi},
  booktitle={Descriptive Complexity and Finite Models: Proceedings of a DIMACS Workshop, January 14-17, 1996, Princeton University},
  volume={31},
  pages={149},
  year={1997},
  organization={American Mathematical Soc.}
}

@article{boreldeterminacy,
  title={Borel determinacy},
  author={Martin, Donald A},
  journal={Annals of Mathematics},
  pages={363--371},
  year={1975},
  publisher={JSTOR}
}

@book{gale-and-stewart,
  title={Descriptive set theory},
  author={Moschovakis, Yiannis N},
  number={155},
  year={2009},
  publisher={American Mathematical Soc.}
}

@article{emerson1984deciding,
  title={Deciding full branching time logic},
  author={Emerson, E Allen and Sistla, A Prasad},
  journal={Information and Control},
  volume={61},
  number={3},
  pages={175--201},
  year={1984},
  publisher={Elsevier}
}

@article{stickel1981unification,
  title={A unification algorithm for associative-commutative functions},
  author={Stickel, Mark E},
  journal={Journal of the ACM (JACM)},
  volume={28},
  number={3},
  pages={423--434},
  year={1981},
  publisher={ACM New York, NY, USA}
}

@inproceedings{c-semantics,
  title={Defining the undefinedness of {C}},
  author={Hathhorn, Chris and Ellison, Chucky and Ro{\c{s}}u, Grigore},
  booktitle={Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={336--345},
  year={2015}
}

@article{haskell-semantics,
  title={Haskel syntax and static semantics written in {K}-framework},
  author={Morrell, Bradley},
  institution = {University of Illinois at Urbana-Champaign},
  number      = {http://hdl.handle.net/2142/105410 },
  year={2018}
}

@inproceedings{evm-semantics,
  title={{KEVM}: A complete formal semantics of the ethereum virtual machine},
  author={Hildenbrandt, Everett and Saxena, Manasvi and Rodrigues, Nishant and Zhu, Xiaoran and Daian, Philip and Guth, Dwight and Moore, Brandon and Park, Daejun and Zhang, Yi and Stefanescu, Andrei and others},
  booktitle={2018 IEEE 31st Computer Security Foundations Symposium (CSF)},
  pages={204--217},
  year={2018},
  organization={IEEE}
}

@article{loosely-guarded-fol,
  title={Loosely guarded fragment of first-order logic has the finite model property},
  author={Hodkinson, Ian},
  journal={Studia Logica},
  volume={70},
  number={2},
  pages={205--240},
  year={2002},
  publisher={Springer}
}

@article{knaster-tarski,
  title={A lattice-theoretical fixpoint theorem and its applications.},
  author={Tarski, Alfred and others},
  journal={Pacific journal of Mathematics},
  volume={5},
  number={2},
  pages={285--309},
  year={1955},
  publisher={Pacific Journal of Mathematics}
}

@article{word-problems-undecidable,
  title={On a problem of {JHC} {W}hitehead and a problem of {A}lonzo {C}hurch},
  author={Boone, William W and Rogers, Hartley},
  journal={Mathematica Scandinavica},
  volume={19},
  number={2},
  pages={185--192},
  year={1967},
  publisher={JSTOR}
}

@online{maude,
  author = {{Maude Team}},
  title = {The {M}aude System},
  url = {maude.cs.illinois.edu/},
}

@online{kframework,
  author = {{The K Team}},
  title = {The {K} Framework},
  url = {https://kframework.org/},
  year = 2016,
  urldate = {2021-07-01}
}

@online{haskell-backend,
  author = {{The K Team}},
  title = {Haskell Backend},
  url = {https://github.com/kframework/kore/},
  year = 2018,
  urldate = {2021-07-01}
}
@online{runtimeverification,
  author = {{Runtime Verification, Inc.}},
  title = {Runtime Verification},
  url = {https://runtimeverification.com/},
  year = 2016,
  urldate = {2021-07-01}
}
@article{mlbinders,
  title={A general approach to define binders using matching logic},
  author={Chen, Xiaohong and Ro{\c{s}}u, Grigore},
  journal={Proceedings of the ACM on Programming Languages},
  volume={4},
  number={ICFP},
  pages={1--32},
  year={2020},
  publisher={ACM New York, NY, USA}
}

@article{matchinglogiclmcs,
  title = {{Matching Logic}},
  author = {Ro\c{s}u, Grigore},
  url = {https://lmcs.episciences.org/4153},
  doi = {10.23638/LMCS-13(4:28)2017},
  journal = {{Logical Methods in Computer Science}},
  volume = {{Volume 13, Issue 4}},
  year = {2017},
  month = Dec,
  keywords = {Computer Science - Logic in Computer Science ; D.2.4 ; D.3.1 ; F.3 ; F.4},
}

@incollection{proptableau,
  title={Tableau methods for classical propositional logic},
  author={d’Agostino, Marcello},
  booktitle={Handbook of tableau methods},
  pages={45--123},
  year={1999},
  publisher={Springer}
}

@book{handbookoftableaumethods,
  title={Handbook of tableau methods},
  author={D'Agostino, Marcello and Gabbay, Dov M and H{\"a}hnle, Reiner and Posegga, Joachim},
  year={2013},
  publisher={Springer Science \& Business Media}
}

@article{hilbertschallenges,
  title={Mathematical problems},
  author={Hilbert, David},
  journal={Bulletin of the American Mathematical Society},
  volume={8},
  number={10},
  pages={437--479},
  year={1902}
}

@article{hilbert1930grundzuge,
  title={Grundz{\"u}ge der theoretischen Logik},
  author={Hilbert, D and Ackermann, W},
  journal={Bull. Amer. Math. Soc},
  volume={36},
  pages={22--25},
  year={1930}
}


@book{courcellemso,
  title={Graph structure and monadic second-order logic: a language-theoretic approach},
  author={Courcelle, Bruno and Engelfriet, Joost},
  volume={138},
  year={2012},
  publisher={Cambridge University Press}
}

@article{modal-languages-and-bounded-fragments,
  title={Modal languages and bounded fragments of predicate logic},
  author={Andr{\'e}ka, Hajnal and N{\'e}meti, Istv{\'a}n and van Benthem, Johan},
  journal={Journal of philosophical logic},
  volume={27},
  number={3},
  pages={217--274},
  year={1998},
  publisher={Springer}
}

@inproceedings{guarded-fixedpoint-logic,
  title={Guarded fixed point logic},
  author={Gradel, Erich and Walukiewicz, Igor},
  booktitle={Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158)},
  pages={45--54},
  year={1999},
  organization={IEEE}
}

@techreport{why-is-modal-logic-so-robustly-decidable,
  title={Why is modal logic so robustly decidable?},
  author={Vardi, Moshe Y},
  year={1997}
}

@inproceedings{x86-semantics,
  title={A complete formal semantics of x86-64 user-level instruction set architecture},
  author={Dasgupta, Sandeep and Park, Daejun and Kasampalis, Theodoros and Adve, Vikram S and Ro{\c{s}}u, Grigore},
  booktitle={Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={1133--1148},
  year={2019}
}

@Article{games-for-mu-calculus,
  author   = {Damian Niwi{{\'{n}}}ski and Igor Walukiewicz},
  title    = {Games for the $\mu$-calculus},
  journal  = {Theoretical Computer Science},
  year     = {1996},
  volume   = {163},
  number   = {1},
  pages    = {99--116},
  issn     = {0304-3975},
  abstract = {Given a formula of the propositional $\mu$-calculus, we construct a tableau of the formula and define an infinite game of two players of which one wants to show that the formula is satisfiable, and the other seeks the opposite. The strategy for the first player can be further transformed into a model of the formula while the strategy for the second forms what we call a refutation of the formula. Using Martin's Determinacy Theorem, we prove that any formula has either a model or a refutation. This completeness result is a starting point for the completeness theorem for the $\mu$-calculus to be presented elsewhere. However, we argue that refutations have some advantages of their own. They are generated by a natural system of sound logical rules and can be presented as regular trees of the size exponential in the size of a refuted formula. This last aspect completes the small model theorem for the $\mu$-calculus established by Emerson and Jutla (1988). Thus, on a more practical side, refutations can be used as small objects testifying incorrectness of a program specification expressed by a $\mu$-formula, we illustrate this point by an example.},
  doi      = {https://doi.org/10.1016/0304-3975(95)00136-0},
  url      = {http://www.sciencedirect.com/science/article/pii/0304397595001360},
}

@techreport{ml-tableaux,
  author   = {Nishant Rodrigues and Xiaohong Chen and Grigore Ro\c{s}u},
  title    = {Technical Report: Decidable Fragments of Matching Logic},
  author_id         = {Nishant Rodrigues and Xiaohong Chen and Grigore Rosu},
  category          = {fsl,matching_logic,program_verification},
  project_url       = {http://www.matching-logic.org},
  project_name      = {Matching Logic},
  institution       = {University of Illinois at Urbana-Champaign},
  month             = {February},
  year              = {2021},
  number = { http://hdl.handle.net/2142/109255},
  abstract          = {
    Matching logic is a unifying logic aimed at defining programming
    language semantics, and reasoning about various program and language
    properties. It is a general logic designed with minimalism in mind. With
    only eight syntactic constructs, matching logic can define many
    important logical frameworks and languages as its theories. Yet, to our
    knowledge, no research has been conducted into the decidability of
    matching logic. In this paper, we begin such an initiative with respect
    to decidable fragments of matching logic and identify the first
    non-trivial decidable fragment for the empty theory. Our decision
    procedure extends a tableau system for modal \(\mu\)-calculus. We also
    give an implementation of the proposed decision procedure and show that
    with modifications, it can be extended to support theories with certain
    axioms.  },
}

@article{clique-guarded-logic,
  title={Guarded fixed point logics and the monadic theory of countable trees},
  author={Gr{\"a}del, Erich},
  journal={Theoretical Computer Science},
  volume={288},
  number={1},
  pages={129--152},
  year={2002},
  publisher={Elsevier}
}

@inproceedings{java-semantics,
  title={K-Java: A complete semantics of Java},
  author={Bogdanas, Denis and Ro{\c{s}}u, Grigore},
  booktitle={Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages={445--456},
  year={2015}
}

@inproceedings{javascript-semantics,
  title={KJS: A complete formal semantics of JavaScript},
  author={Park, Daejun and Stef{\u{a}}nescu, Andrei and Ro{\c{s}}u, Grigore},
  booktitle={Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={346--356},
  year={2015}
}

@article{semantics-of-k,
  title={Technical Report: Applicative Matching Logic: Semantics of K},
  author={Chen, Xiaohong and Rosu, Grigore},
  year={2020}
}

@article{entscheidungsproblem,
  title={Grundz{\"u}ge der theoretischen Logik},
  author={Hilbert, D and Ackermann, W},
  journal={Bull. Amer. Math. Soc},
  volume={36},
  pages={22--25},
  year={1930}
}
@InProceedings{slrd,
  author="Iosif, Radu
  and Rogalewicz, Adam
  and Simacek, Jiri",
  editor="Bonacina, Maria Paola",
  title="The Tree Width of Separation Logic with Recursive Definitions",
  booktitle="Automated Deduction -- CADE-24",
  year="2013",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="21--38",
  abstract="Separation Logic is a widely used formalism for describing dynamically allocated linked data structures, such as lists, trees, etc. The decidability status of various fragments of the logic constitutes a long standing open problem. Current results report on techniques to decide satisfiability and validity of entailments for Separation Logic(s) over lists (possibly with data). In this paper we establish a more general decidability result. We prove that any Separation Logic formula using rather general recursively defined predicates is decidable for satisfiability, and moreover, entailments between such formulae are decidable for validity. These predicates are general enough to define (doubly-) linked lists, trees, and structures more general than trees, such as trees whose leaves are chained in a list. The decidability proofs are by reduction to decidability of Monadic Second Order Logic on graphs with bounded tree width.",
  isbn="978-3-642-38574-2"
}
@article{guarded-separation-logic,
  title={A Decision Procedure for Guarded Separation Logic: Complete Entailment Checking for Separation Logic with Inductive Definitions},
  author={Pagel, Jens and Matheja, Christoph and Zuleger, Florian},
  journal={arXiv preprint arXiv:2002.01202},
  year={2020}
}

@book{courcelle2012graph,
  title={Graph structure and monadic second-order logic: a language-theoretic approach},
  author={Courcelle, Bruno and Engelfriet, Joost},
  volume={138},
  year={2012},
  publisher={Cambridge University Press}
}

@article{dpll,
  title={A computing procedure for quantification theory},
  author={Davis, Martin and Putnam, Hilary},
  journal={Journal of the ACM (JACM)},
  volume={7},
  number={3},
  pages={201--215},
  year={1960},
  publisher={ACM New York, NY, USA}
}

@article{dpllt,
  author = {Nieuwenhuis, Robert and Oliveras, Albert and Tinelli, Cesare},
  title = {Solving SAT and SAT Modulo Theories: From an Abstract Davis--Putnam--Logemann--Loveland Procedure to DPLL(T)},
  year = {2006},
  issue_date = {November 2006},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {53},
  number = {6},
  issn = {0004-5411},
  url = {https://doi.org/10.1145/1217856.1217859},
  doi = {10.1145/1217856.1217859},
  abstract = {We first introduce Abstract DPLL, a rule-based formulation of the Davis--Putnam--Logemann--Loveland (DPLL) procedure for propositional satisfiability. This abstract framework allows one to cleanly express practical DPLL algorithms and to formally reason about them in a simple way. Its properties, such as soundness, completeness or termination, immediately carry over to the modern DPLL implementations with features such as backjumping or clause learning.We then extend the framework to Satisfiability Modulo background Theories (SMT) and use it to model several variants of the so-called lazy approach for SMT. In particular, we use it to introduce a few variants of a new, efficient and modular approach for SMT based on a general DPLL(X) engine, whose parameter X can be instantiated with a specialized solver SolverT for a given theory T, thus producing a DPLL(T) system. We describe the high-level design of DPLL(X) and its cooperation with SolverT, discuss the role of theory propagation, and describe different DPLL(T) strategies for some theories arising in industrial applications.Our extensive experimental evidence, summarized in this article, shows that DPLL(T) systems can significantly outperform the other state-of-the-art tools, frequently even in orders of magnitude, and have better scaling properties.},
  journal = {J. ACM},
  month = nov,
  pages = {937–977},
  numpages = {41},
  keywords = {SAT solvers, Satisfiability Modulo Theories}
}

@article{variant-based-satisfiability,
  title={Variant-based satisfiability in initial algebras},
  author={Meseguer, Jos{\'e}},
  journal={Science of Computer Programming},
  volume={154},
  pages={3--41},
  year={2018},
  publisher={Elsevier}
}

@article{matching-logic-explained,
title = {Matching logic explained},
journal = {Journal of Logical and Algebraic Methods in Programming},
volume = {120},
pages = {100638},
year = {2021},
issn = {2352-2208},
doi = {https://doi.org/10.1016/j.jlamp.2021.100638},
url = {https://www.sciencedirect.com/science/article/pii/S2352220821000018},
author = {Xiaohong Chen and Dorel Lucanu and Grigore Roşu},
keywords = {Matching logic, Program logics, (co)inductive data types, Dependent types, Specification of transition systems, (co)monad specification},
abstract = {Matching logic was recently proposed as a unifying logic for specifying and reasoning about static structure and dynamic behavior of programs. In matching logic, patterns and specifications are used to uniformly represent mathematical domains (such as numbers and Boolean values), datatypes, and transition systems, whose properties can be reasoned about using one fixed matching logic proof system. In this paper we give a tutorial of matching logic. We use a suite of examples to explain the basic concepts of matching logic and show how to capture many important mathematical domains, datatypes, and transition systems using patterns and specifications. We put emphasis on the general principles of induction and coinduction in matching logic and show how to do inductive and coinductive reasoning about datatypes and codatatypes. To encourage the future tools development for matching logic, we propose and use throughout the paper a human-readable formal syntax to write specifications in a modular and compact way.}
}

@inproceedings{smtlib,
  title={The smt-lib standard: Version 2.0},
  author={Barrett, Clark and Stump, Aaron and Tinelli, Cesare and others},
  booktitle={Proceedings of the 8th international workshop on satisfiability modulo theories (Edinburgh, England)},
  volume={13},
  pages={14},
  year={2010}
}

@inproceedings{z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle={International conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  organization={Springer}
}

@InProceedings{mathsat4,
  author="Bruttomesso, Roberto
  and Cimatti, Alessandro
  and Franz{\'e}n, Anders
  and Griggio, Alberto
  and Sebastiani, Roberto",
  editor="Gupta, Aarti
  and Malik, Sharad",
  title="The MathSAT 4 SMT Solver",
  booktitle="Computer Aided Verification",
  year="2008",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="299--303",
  abstract="We present MathSAT 4, a state-of-the-art SMT solver. MathSAT 4 handles several useful theories: (combinations of) equality and uninterpreted functions, difference logic, linear arithmetic, and the theory of bit-vectors. It was explicitly designed for being used in formal verification, and thus provides functionalities which extend the applicability of SMT in this setting. In particular: model generation (for counterexample reconstruction), model enumeration (for predicate abstraction), an incremental interface (for BMC), and computation of unsatisfiable cores and Craig interpolants (for abstraction refinement).",
  isbn="978-3-540-70545-1"
}


@InProceedings{kasampalis2021language,
  author    = {Kasampalis, Theodoros and Park, Daejun and Lin, Zhengyao and Adve, Vikram S and Ro{\c{s}}u, Grigore},
  booktitle = {Proceedings of the 26\textsuperscript{th} ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  title     = {Language-parametric compiler validation with application to LLVM},
  year      = {2021},
  pages     = {1004--1019},
  address   = {Virtual},
  publisher = {ACM New York, NY, USA},
}

@InProceedings{SPY+16,
  author    = {\c{S}tef\u{a}nescu, Andrei and Park, Daejun and Yuwen, Shijiao and Li, Yilong and Ro\c{s}u, Grigore},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'16)},
  title     = {Semantics-based program verifiers for all languages},
  year      = {2016},
  pages     = {74--91},
  publisher = {ACM},
  acmid     = {2984027},
  isbn      = {978-1-4503-4444-9},
  address   = {Amsterdam, Netherlands},
}


@inproceedings{chen-lin-trinh-rosu-2021-cav,
  author    = {Xiaohong Chen and Zhengyao Lin and Minh-Thai Trinh and Grigore Ro\c{s}u},
  title     = {Towards a Trustworthy Semantics-Based Language Framework via Proof Generation},
  author_id         = {Xiaohong Chen and Zhengyao Lin and Minh-Thai Trinh and Grigore Rosu},
  category          = {fsl, executable_semantics, logics, matching_logic,
                       program_verification, programming_languages},
  project_url       = {https://github.com/kframework/matching-logic-proof-checker},
  project_name      = {Matching Logic Proof Checker},
  booktitle_acronym = {CAV'21},
  booktitle_url     = {http://i-cav.org/2021/},
  booktitle         = {Proceedings of the 33rd International Conference on Computer-Aided Verification},
  year              = {2021},
  month             = {July},
  publisher         = {ACM},
}

@article{mortimer1975-fo2,
  title={On languages with two variables},
  author={Mortimer, Michael},
  journal={Mathematical Logic Quarterly},
  volume={21},
  number={1},
  pages={135--140},
  year={1975},
  publisher={Wiley Online Library}
}


@article{chandra1982relationalqueries,
  title={Structure and complexity of relational queries},
  author={Chandra, Ashok and Harel, David},
  journal={Journal of Computer and system Sciences},
  volume={25},
  number={1},
  pages={99--128},
  year={1982},
  publisher={Elsevier}
}

@incollection{gurevich1984toward,
  title={Toward logic tailored for computational complexity},
  author={Gurevich, Yuri},
  booktitle={Computation and proof theory},
  pages={175--216},
  year={1984},
  publisher={Springer}
}


@article{urquhart1981,
 ISSN = {00223611, 15730433},
 URL = {http://www.jstor.org/stable/30226231},
 author = {Alasdair Urquhart},
 journal = {Journal of Philosophical Logic},
 number = {3},
 pages = {367--370},
 publisher = {Springer},
 title = {Decidability and the Finite Model Property},
 volume = {10},
 year = {1981}
}

@article{martin75-borel-determinacy,
  title={Borel determinacy},
  author={Martin, Donald A},
  journal={Annals of Mathematics},
  volume={102},
  number={2},
  pages={363--371},
  year={1975},
  publisher={JSTOR}
}

@InProceedings{towards-a-unified-framework,
  author            = {Xiaohong Chen and Minh-Thai Trinh and Nishant Rodrigues and Lucas Pe{\~{n}}a and Grigore Ro\c{s}u},
  title             = {Towards A Unified Proof Framework for Automated Fixpoint Reasoning Using Matching Logic},
  abstract          = {Automation of fixpoint reasoning has been extensively studied for various mathematical structures, logical formalisms, and computational domains, resulting in specialized fixpoint provers for heaps, for streams, for term algebras, for temporal properties, for program correctness, and for many other formal systems and inductive and coinductive properties. However, in spite of great theoretical and practical interest, there is no unified framework for automated fixpoint reasoning. Although several attempts have been made, there is no evidence that such a unified framework is possible, or practical. In this paper, we propose a candidate based on matching logic, a formalism recently shown to theoretically unify the above mentioned formal systems. Unfortunately, the (Knaster-Tarski) proof rule of matching logic, which enables inductive reasoning, is not syntax-driven. Worse, it can be applied at any step during a proof, making automation seem hopeless. Inspired by recent advances in automation of inductive proofs in separation logic, we propose an alternative proof system for matching logic, which is amenable for automation. We then discuss our implementation of it, which although not superior to specialized state-of-the-art automated provers for specific domains, we believe brings some evidence and hope that a unified framework for automated reasoning is not out of reach.},
  author_id         = {Xiaohong Chen and Minh-Thai Trinh and Nishant Rodrigues and Lucas Pena and Grigore Rosu},
  year              = {2020},
  booktitle_acronym = {OOPSLA'20},
  booktitle_url     = {https://2020.splashcon.org/track/splash-2020-oopsla},
  booktitle         = {PACMPL Issue OOPSLA 2020},
  category          = {fsl,matching_logic},
  project_name      = {Matching Logic},
  project_url       = {http://www.matching-logic.org},
  publisher         = {ACM/IEEE},
  numpages = {29},
  pages = {1-29},
  month = {Nov},
}

@inproceedings{krstic2007-architecting,
  title={Architecting solvers for SAT modulo theories: Nelson-Oppen with DPLL},
  author={Krsti{\'c}, Sava and Goel, Amit},
  booktitle={International Symposium on Frontiers of Combining Systems},
  pages={1--27},
  year={2007},
  organization={Springer}
}


@article{nelsonoppen1979-cooperating-decision-procedures,
  title={Simplification by cooperating decision procedures},
  author={Nelson, Greg and Oppen, Derek C},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume={1},
  number={2},
  pages={245--257},
  year={1979},
  publisher={ACM New York, NY, USA}
}

@article{friedmann2009-pgsolver,
  title={The PGSolver collection of parity game solvers},
  author={Friedmann, Oliver and Lange, Martin},
  journal={University of Munich},
  pages={4--6},
  year={2009}
}

@article{marx2001-tolerance-logic,
  title={Tolerance logic},
  author={Marx, Maarten},
  journal={Journal of Logic, Language and Information},
  volume={10},
  number={3},
  pages={353--374},
  year={2001},
  publisher={Springer}
}

